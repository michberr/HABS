samp2 <- filter(spacer, metagenome == x[2])
return(length(intersect(samp1$sequence, samp2$sequence)))
})
spacer_overlaps <- apply(X = metaG_combs, MARGIN = 2, function(x) {
samp1 <- filter(spacer, metagenome == x[1])
samp2 <- filter(spacer, metagenome == x[2])
return(length(intersect(samp1$sequence, samp2$sequence)))
})
View(spacer_overlaps)
dim(metaG_combs)
length(spacer_overlaps)
metaG_combs <- t(combn(unique(spacer$metagenome), 2))
View(metaG_combs)
spacer_overlaps <- apply(X = metaG_combs, MARGIN = 1, function(x) {
samp1 <- filter(spacer, metagenome == x[1])
samp2 <- filter(spacer, metagenome == x[2])
return(length(intersect(samp1$sequence, samp2$sequence)))
})
spacer_overlaps
spacer_overlaps_df <- data.frame(metaG_combs, spacer_overlaps)
View(spacer_overlaps_df)
ggplot(spacer_overlaps_df, aes(x = X1, y = X2, fill = spacer_overlaps)) +
geom_tile()
pacer_hit_filenames <- list.files(pattern = "*allVirome*", recursive = T)
# Read in all spacer fasta files
spacer_hit_files <- lapply(spacer_hit_filenames, function(x){
if (file.info(x)$size > 0) {
read.csv(x, sep = "\t", header = F)
}
})
names(spacer_hit_files) <- spacer_hit_filenames
# Add a column to each dataframe with the metagenome, virome, and DR type
spacer_hit_dfs <- Map(
function(df, name) {
if (!is.null(df)) {
df <- df %>%
select(V1, V2, V3, V4, V11) %>%
rename(Spacer = V1, VirContig = V2, Match = V3, SpLength = V4, Escore = V11)
} else {
df <- data.frame(Spacer = NA, VirContig = NA, Match = NA, SpLength = NA, Escore = NA)
}
parsed_fnames <- matrix(
unlist(strsplit(name, split = "/")),
ncol = 3, byrow = T
)
newdf <- df %>%
mutate(metagenome = parsed_fnames[ ,1]) %>%
mutate(virome = substr(parsed_fnames[ ,2], 1, 5)) %>%
mutate(DR = ifelse(grepl(parsed_fnames[ ,2], pattern = "ATTAGGGA"), "T",
ifelse(grepl(parsed_fnames[ ,2], pattern = "ACTAGGGA"), "C",
"other"))
)
# Return new data fame
return(newdf)
},
spacer_hit_files,
spacer_hit_filenames
)
# Rbind all the spacer df's
spacer_hit_bind <- do.call("rbind", args = spacer_hit_dfs)
spacer_hits <- spacer_hit_bind %>%
mutate(file = row.names(spacer_hit_bind)) %>%
mutate(metaGDate = substr(metagenome, 1, 5)) %>%
mutate(metaGFraction = substr(metagenome, 7, 10))
spacer_hits$metaGFraction <- factor(spacer_hits$metaGFraction, levels = c("CNA", "100", "53", "3"))
spacer_hit_filenames <- list.files(pattern = "*allVirome*", recursive = T)
# Read in all spacer fasta files
spacer_hit_files <- lapply(spacer_hit_filenames, function(x){
if (file.info(x)$size > 0) {
read.csv(x, sep = "\t", header = F)
}
})
names(spacer_hit_files) <- spacer_hit_filenames
# Add a column to each dataframe with the metagenome, virome, and DR type
spacer_hit_dfs <- Map(
function(df, name) {
if (!is.null(df)) {
df <- df %>%
select(V1, V2, V3, V4, V11) %>%
rename(Spacer = V1, VirContig = V2, Match = V3, SpLength = V4, Escore = V11)
} else {
df <- data.frame(Spacer = NA, VirContig = NA, Match = NA, SpLength = NA, Escore = NA)
}
parsed_fnames <- matrix(
unlist(strsplit(name, split = "/")),
ncol = 3, byrow = T
)
newdf <- df %>%
mutate(metagenome = parsed_fnames[ ,1]) %>%
mutate(virome = substr(parsed_fnames[ ,2], 1, 5)) %>%
mutate(DR = ifelse(grepl(parsed_fnames[ ,2], pattern = "ATTAGGGA"), "T",
ifelse(grepl(parsed_fnames[ ,2], pattern = "ACTAGGGA"), "C",
"other"))
)
# Return new data fame
return(newdf)
},
spacer_hit_files,
spacer_hit_filenames
)
# Rbind all the spacer df's
spacer_hit_bind <- do.call("rbind", args = spacer_hit_dfs)
spacer_hits <- spacer_hit_bind %>%
mutate(file = row.names(spacer_hit_bind)) %>%
mutate(metaGDate = substr(metagenome, 1, 5)) %>%
mutate(metaGFraction = substr(metagenome, 7, 10))
spacer_hits$metaGFraction <- factor(spacer_hits$metaGFraction, levels = c("CNA", "100", "53", "3"))
#   mutate(SpCoverage = ifelse(!is.na(Spacer),
#    matrix(unlist(strsplit(as.character(Spacer), split = "_")), ncol = 3, byrow = T)[ ,3],
#    NA
#  ))
countsum <- spacer_hits %>%
group_by(metaGDate, metaGFraction, virome, DR) %>%
tally() %>%
rename(hits = n)
#mutate(hits = ifelse(hits == 1, 0, hits))
countsum[countsum$hits == 1, "hits"] <- 0
countsumT <- filter(countsum, DR == "T")
countsumC <- filter(countsum, DR == "C")
count100um <- filter(countsum, metaGFraction == "100")
ggplot(count100um, aes(x = metaGDate, y = virome, fill = hits)) +
facet_grid(DR~.) +
geom_tile() +
xlab("metagenome") +
ggtitle("Blast hits between metaG spacers in 100um and viromes \nfor Microcystis CRISPR repeats")
countCNA <- filter(countsum, metaGFraction == "CNA")
gplot(countCNA, aes(x = metaGDate, y = virome, fill = hits)) +
facet_grid(DR~.) +
geom_tile() +
xlab("metagenome") +
ggtitle("Blast hits between metaG spacers in full community and viromes \nfor Microcystis CRISPR repeats")
ggplot(countCNA, aes(x = metaGDate, y = virome, fill = hits)) +
facet_grid(DR~.) +
geom_tile() +
xlab("metagenome") +
ggtitle("Blast hits between metaG spacers in full community and viromes \nfor Microcystis CRISPR repeats")
ggplot(count100um, aes(x = metaGDate, y = virome, fill = hits)) +
facet_grid(DR~.) +
geom_tile() +
xlab("metagenome") +
ggtitle("Blast hits between metaG spacers in 100um and viromes \nfor Microcystis CRISPR repeats")
View(spacer_hits)
v <- spacer_hit_bind$VirContig[1:10]
substr(v, -7, -10)
?substr
substr(v, 1:7, 11:20)
v
v <- spacer_hit_bind$VirContig
v
v <- spacer_hit_bind$VirContig[419:427]
v
substr(v, 1:7, 11:20)
substr(v, -7, -10)
substr("abcdef", 2, 4)
substring("abcdef", 1:6, 1:6)
gsub(v, "-115", "")
gsub(v, pattern = "-115", replacement = "")
spacer_hits <- spacer_hit_bind %>%
mutate(file = row.names(spacer_hit_bind)) %>%
mutate(metaGDate = substr(metagenome, 1, 5)) %>%
mutate(metaGFraction = substr(metagenome, 7, 10)) %>%
mutate(VirContig = gsub(x = VirContig, pattern = "-115", replacement = "")
spacer_hits$metaGFraction <- factor(spacer_hits$metaGFraction, levels = c("CNA", "100", "53", "3"))
#   mutat
spacer_hits <- spacer_hit_bind %>%
mutate(file = row.names(spacer_hit_bind)) %>%
mutate(metaGDate = substr(metagenome, 1, 5)) %>%
mutate(metaGFraction = substr(metagenome, 7, 10)) %>%
mutate(VirContig = gsub(x = VirContig, pattern = "-115", replacement = "")
spacer_hits$metaGFraction <- factor(spacer_hits$metaGFraction, levels = c("CNA", "100", "53", "3"))
spacer_hits <- spacer_hit_bind %>%
mutate(file = row.names(spacer_hit_bind)) %>%
mutate(metaGDate = substr(metagenome, 1, 5)) %>%
mutate(metaGFraction = substr(metagenome, 7, 10)) %>%
mutate(VirContig = gsub(x = VirContig, pattern = "-115", replacement = ""))
spacer_hits$metaGFraction <- factor(spacer_hits$metaGFraction, levels = c("CNA", "100", "53", "3"))
#   mutate(SpCoverage = ifelse(!is.na(Spacer),
#    ma
View(spacer_hits)
gplot(countsumT, aes(x = metaGDate, y = virome, fill = hits)) +
facet_grid(metaGFraction~.) +
geom_tile()
ggplot(countsumT, aes(x = metaGDate, y = virome, fill = hits)) +
facet_grid(metaGFraction~.) +
geom_tile()
head(spacer_hits)
tail(spacer_hits)
spacer_hits %>%
group_by(metaGDate, metaGFraction, virome, DR, VirContig) %>%
tally() %>%
rename(hits = n)
ss <- spacer_hits %>%
group_by(metaGDate, metaGFraction, virome, DR, VirContig) %>%
tally() %>%
rename(hits = n)
View(ss)
View(countsum)
max(ss$hits)
which.max(ss$hits)
ss[which.max(ss$hits), ]
View(spacer)
spacer %>% group_by(metagenome) %>% tally()
spacer %>%
group_by(metagenome, DR) %>%
tally()
spacer %>%
group_by(metagenome) %>%
tally()
spacer_tally_DR <- spacer %>%
group_by(metagenome, DR) %>%
tally()
spacer_tally_DR
View(spacer_tally_DR)
library(vegan)
?diversity
?spread
?gather
spread(spacer, sequence, coverage)
library(tidyr)
spread(spacer, sequence, coverage)
nlevels(spacer$sequence)
s <- select(spacer, sequence, metagenome, coverage)
head(s)
ss <- spread(s, metagenome, coverage)
setwd("~/git_repos/chabs/")
load("erie-data.RData")
setwd("miseq_may2015/analysis")
load("erie-data.RData")
dir()
setwd("data/")
load("erie-data.RData")
erie
View(otu_table(erie))
psmelt
p <- psmelt(erie)
View(p)
SN = c(1:100, 1:100, 1:100, 1:100)
class = c(rep("A1", 100), rep("B2", 100), rep("C3", 100), rep("D4", 100)) # total 6000 levels
myvar = rnorm(400)
mydf = data.frame(SN, class, myvar)
View(mydf)
dcast(mydf, sn ~class)
dcast(mydf, SN ~ class)
spacer_dcast <- spacer %>%
select(sequence, metagenome, coverage) %>%
dcast(sequence ~ metagenome)
View(spacer_dcast)
max(spacer_dcast)
dim(spacer_dcast)
max(spacer_dcast[,-1])
?dcast
spacer_dcast_T <- spacer %>%
select(sequence, metagenome, coverage) %>%
filter(DR == "T") %>%
dcast(sequence ~ metagenome)
spacer_dcast_T <- spacer %>%
filter(DR == "T") %>%
select(sequence, metagenome, coverage) %>%
dcast(sequence ~ metagenome)
spacer_dcast_T <- spacer %>%
filter(DR == "T") %>%
select(sequence, metagenome, coverage) %>%
dcast(sequence ~ metagenome, value.var = coverage)
spacer_dcast_T <- spacer %>%
filter(DR == "T") %>%
select(sequence, metagenome, coverage) %>%
dcast(formula = sequence ~ metagenome, value.var = "coverage")
View(spacer_dcast_T)
spacer_dcast_C <- spacer %>%
filter(DR == "C") %>%
select(sequence, metagenome, coverage) %>%
dcast(formula = sequence ~ metagenome, value.var = "coverage")
View(spacer_dcast_C)
spacer_dcast_C[is.na(spacer_dcast_C)] <- 0
spacer_dcast_T[is.na(spacer_dcast_T)] <- 0
vegan::diversity(spacer_dcast_C, index = "invsimpson")
?diversity
head(spacer_dcast_C)
rownames(spacer_dcast_C) <- spacer_dcast_C$sequence
spacer_dcast_C <- spacer_dcast_C[ ,-1]
head(spacer_dcast_C)
vegan::diversity(spacer_dcast_C, index = "invsimpson")
vegan::diversity(spacer_dcast_C, index = "invsimpson", MARGIN = 2)
spacer_dcast_T[is.na(spacer_dcast_T)] <- 0
rownames(spacer_dcast_T) <- spacer_dcast_T$sequence
spacer_dcast_T <- spacer_dcast_T[ ,-1]
vegan::diversity(spacer_dcast_T, index = "invsimpson", MARGIN = 2)
?dcast
max_coverage <- max(spacer$coverage)
max_cover_sample <- spacer[which.max(spacer$coverage), "metagenome"]
l <- length(which(spacer$coverage > 10))
max_cover_sample
spacer[which.max(spacer$coverage), ]
invsimp_T <- vegan::diversity(spacer_dcast_T, index = "invsimpson", MARGIN = 2)
invsimp_C <- vegan::diversity(spacer_dcast_C, index = "invsimpson", MARGIN = 2)
invsimp_C
invsimp_T
invsimp_T %>%
full_join(invsimp_C, by = "row.names")
invsimp_T %>%
full_join(invsimp_C, by = "rownames")
invsimp_T %>%
data.frame() %>%
full_join(invsimp_C, by = "rownames")
invsimp_T %>%
data.frame(
)
data.frame(invsimp_T) %>%
full_join(data.frame(invsimp_C), by = "rownames")
data.frame(invsimp_T) %>%
full_join(data.frame(invsimp_C), by = "row.names")
data.frame(invsimp_T) %>%
merge(data.frame(invsimp_C), by = "row.names")
data.frame(invsimp_T) %>%
join(data.frame(invsimp_C), by = "row.names")
data.frame(invsimp_T) %>%
left_join(data.frame(invsimp_C), by = "row.names")
data.frame(invsimp_T) %>%
left_join(data.frame(invsimp_C), by = (row.names = row.names))
row.names(invsimp_C)
row.names(invsimp_C)
rownames(data.frame(invsimp_C))
row.names(data.frame(invsimp_C)
)
invsimp_C <- vegan::diversity(spacer_dcast_C, index = "invsimpson", MARGIN = 2) %>%
data.frame(., name = names(.))
invsimp_C
invsimp_C <- vegan::diversity(spacer_dcast_C, index = "invsimpson", MARGIN = 2) %>%
data.frame(invsimp = ., sample = names(.))
invsimp_C
invsimp_T <- vegan::diversity(spacer_dcast_T, index = "invsimpson", MARGIN = 2) %>%
data.frame(invsimp = ., sample = names(.))
spacer_invsimp <- invsimp_T %>%
left_join(invsimp_C, by = (sample = sample))
spacer_invsimp <- invsimp_T %>%
left_join(invsimp_C)
spacer_invsimp
invsimp_T <- vegan::diversity(spacer_dcast_T, index = "invsimpson", MARGIN = 2) %>%
data.frame(T = ., sample = names(.))
invsimp_C <- vegan::diversity(spacer_dcast_C, index = "invsimpson", MARGIN = 2) %>%
data.frame(C = ., sample = names(.))
spacer_invsimp <- invsimp_T %>%
left_join(invsimp_C)
spacer_invsimp
spacer_invsimp <- invsimp_T %>%
left_join(invsimp_C) %>%
melt()
spacer_invsimp <- invsimp_T %>%
left_join(invsimp_C, by = "sample")
spacer_invsimp <- invsimp_T %>%
left_join(invsimp_C, by = "sample") %>%
melt(id.vars = "sample")
spacer_invsimp
spacer_invsimp <- invsimp_T %>%
left_join(invsimp_C, by = "sample") %>%
melt(id.vars = "sample") %>%
mutate(sampleId = substr(sample, 1, 5)) %>%
mutate(fraction = substr(sample, 7, 10))
spacer_invsimp
spacer_invsimp <- invsimp_T %>%
left_join(invsimp_C, by = "sample") %>%
melt(id.vars = "sample") %>%
mutate(SampleID = substr(sample, 1, 5)) %>%
mutate(Fraction = substr(sample, 7, 10))
ggplot(spacer_invsimp, aes(x = sampleID, y = value, group = variable, color = variable)) +
facet_grid(Fraction ~.) +
geom_line()
spacer_invsimp <- invsimp_T %>%
left_join(invsimp_C, by = "sample") %>%
melt(id.vars = "sample") %>%
mutate(SampleID = substr(sample, 1, 5)) %>%
mutate(Fraction = substr(sample, 7, 10))
ggplot(spacer_invsimp, aes(x = sampleID, y = value, group = variable, color = variable)) +
facet_grid(Fraction ~.) +
geom_line()
ggplot(spacer_invsimp, aes(x = SampleID, y = value, group = variable, color = variable)) +
facet_grid(Fraction ~.) +
geom_line()
ggplot(spacer_invsimp, aes(x = SampleID, y = value, group = variable, color = variable)) +
facet_grid(Fraction ~.) +
geom_point()
spacer_invsimp <- invsimp_T %>%
left_join(invsimp_C, by = "sample") %>%
melt(id.vars = "sample") %>%
mutate(SampleID = substr(sample, 1, 5)) %>%
mutate(Fraction = substr(sample, 7, 10)) %>%
mutate(Fraction = factor(Fraction, levels = c("CNA", "100", "53", "3")))
ggplot(spacer_invsimp, aes(x = SampleID, y = value, group = variable, color = variable)) +
facet_grid(Fraction ~.) +
geom_point()
ggplot(spacer_invsimp, aes(x = SampleID, y = value, group = variable, color = variable)) +
facet_grid(Fraction ~.) +
geom_point() +
ylab("Inverse Simpson") +
scale_color_manual(name = "DR type")
ggplot(spacer_invsimp, aes(x = SampleID, y = value, group = variable, color = variable)) +
facet_grid(Fraction ~.) +
geom_point() +
ylab("Inverse Simpson") +
scale_shape_discrete(name = "DR type")
spacer_invsimp <- invsimp_T %>%
left_join(invsimp_C, by = "sample") %>%
melt(id.vars = "sample") %>%
mutate(SampleID = substr(sample, 1, 5)) %>%
mutate(Fraction = substr(sample, 7, 10)) %>%
mutate(Fraction = factor(Fraction, levels = c("CNA", "100", "53", "3"))) %>%
rename("DR-Type" = "variable")
ggplot(spacer_invsimp, aes(x = SampleID, y = value, group = variable, color = "DR-Type")) +
facet_grid(Fraction ~.) +
geom_point() +
ylab("Inverse Simpson")
ggplot(spacer_invsimp, aes(x = SampleID, y = value, group = variable, color = DR-Type)) +
facet_grid(Fraction ~.) +
geom_point() +
ylab("Inverse Simpson")
spacer_invsimp <- invsimp_T %>%
left_join(invsimp_C, by = "sample") %>%
melt(id.vars = "sample") %>%
mutate(SampleID = substr(sample, 1, 5)) %>%
mutate(Fraction = substr(sample, 7, 10)) %>%
mutate(Fraction = factor(Fraction, levels = c("CNA", "100", "53", "3"))) %>%
rename("DR" = "variable")
ggplot(spacer_invsimp, aes(x = SampleID, y = value, group = variable, color = DR)) +
facet_grid(Fraction ~.) +
geom_point() +
ylab("Inverse Simpson")
spacer_invsimp <- invsimp_T %>%
left_join(invsimp_C, by = "sample") %>%
melt(id.vars = "sample") %>%
mutate(SampleID = substr(sample, 1, 5)) %>%
mutate(Fraction = substr(sample, 7, 10)) %>%
mutate(Fraction = factor(Fraction, levels = c("CNA", "100", "53", "3"))) %>%
rename(DR = variable)
ggplot(spacer_invsimp, aes(x = SampleID, y = value, group = variable, color = DR)) +
facet_grid(Fraction ~.) +
geom_point() +
ylab("Inverse Simpson")
spacer_invsimp <- invsimp_T %>%
left_join(invsimp_C, by = "sample") %>%
melt(id.vars = "sample") %>%
mutate(SampleID = substr(sample, 1, 5)) %>%
mutate(Fraction = substr(sample, 7, 10)) %>%
mutate(Fraction = factor(Fraction, levels = c("CNA", "100", "53", "3"))) %>%
rename(DR = variable)
ggplot(spacer_invsimp, aes(x = SampleID, y = value, group = DR, color = DR)) +
facet_grid(Fraction ~.) +
geom_point() +
ylab("Inverse Simpson")
spacer_tally <- spacer %>%
group_by(metagenome, DR) %>%
tally()
spacer_tally
spacer_tally <- spacer %>%
group_by(metagenome, DR) %>%
tally() %>%
mutate(SampleID = substr(sample, 1, 5)) %>%
mutate(Fraction = substr(sample, 7, 10)) %>%
mutate(Fraction = factor(Fraction, levels = c("CNA", "100", "53", "3")))
ggplot(spacer_tally, aes(x = SampleID, y = n, group = DR, color = DR)) +
facet_grid(Fraction~.) +
geom_point()
spacer_tally <- spacer %>%
group_by(metagenome, DR) %>%
tally() %>%
mutate(SampleID = substr(sample, 1, 5)) %>%
mutate(Fraction = substr(sample, 7, 10)) %>%
mutate(Fraction = factor(Fraction, levels = c("CNA", "100", "53", "3")))
head(spacer_tally)
spacer_tally <- spacer %>%
group_by(metagenome, DR) %>%
tally() %>%
mutate(SampleID = substr(metagenome, 1, 5)) %>%
mutate(Fraction = substr(metagenome, 7, 10)) %>%
mutate(Fraction = factor(Fraction, levels = c("CNA", "100", "53", "3")))
ggplot(spacer_tally, aes(x = SampleID, y = n, group = DR, color = DR)) +
facet_grid(Fraction~.) +
geom_point()
ggplot(spacer_tally, aes(x = SampleID, y = n, group = Fraction, color = Fraction)) +
geom_point() +
ylab("Richness") +
ggtitle("Spacer Richness across fractions, dates and DR types")
spacer_tally <- spacer %>%
group_by(metagenome) %>%
tally() %>%
mutate(SampleID = substr(metagenome, 1, 5)) %>%
mutate(Fraction = substr(metagenome, 7, 10)) %>%
mutate(Fraction = factor(Fraction, levels = c("CNA", "100", "53", "3")))
ggplot(spacer_tally, aes(x = SampleID, y = n, group = Fraction, color = Fraction)) +
geom_point() +
ylab("Richness") +
ggtitle("Spacer Richness across fractions, dates and DR types")
spacer_tally <- spacer %>%
group_by(metagenome, DR) %>%
tally() %>%
mutate(SampleID = substr(metagenome, 1, 5)) %>%
mutate(Fraction = substr(metagenome, 7, 10)) %>%
mutate(Fraction = factor(Fraction, levels = c("CNA", "100", "53", "3")))
ggplot(spacer_tally, aes(x = SampleID, y = n, group = DR, color = DR)) +
facet_grid(Fraction~.) +
geom_point() +
ylab("Richness") +
ggtitle("Spacer Richness across fractions, dates and DR types")
spacer_tally <- spacer %>%
group_by(metagenome) %>%
tally() %>%
mutate(SampleID = substr(metagenome, 1, 5)) %>%
mutate(Fraction = substr(metagenome, 7, 10)) %>%
mutate(Fraction = factor(Fraction, levels = c("CNA", "100", "53", "3")))
ggplot(spacer_tally, aes(x = SampleID, y = n, group = Fraction, color = Fraction)) +
geom_point() +
ylab("Richness") +
ggtitle("Spacer Richness across fractions, dates and DR types")
